# Правила упорядочения

# def kwonly(a, **pargs, b, c):
#     pass
# SyntaxError: arguments cannot follow var-keyword argument

# def kwonly(a, **, b, c):
#     pass
# SyntaxError: invalid syntax

# def f(a, *b, **d, c=6): print(a, b, c, d)
# SyntaxError: arguments cannot follow var-keyword argument


def f(a, *b, c=6, **d): print(a, b, c, d)  # Сбор аргументов в заголовке

f(1, 2, 3, x=4, y=5)        # Используется стандартное значение
# 1 (2, 3) 6 {'x': 4, 'y': 5}
f(1, 2, 3, x=4, y=5, c=7)   # Переопределяется стандартное значение
# 1 (2, 3) 7 {'x': 4, 'y': 5}
f(1, 2, 3, c=7, x=4, y=5)   # Где угодно в ключевых аргументах
# 1 (2, 3) 7 {'x': 4, 'y': 5}
print('-' * 80)


def f(a, c=6, *b, **d): print(a, b, c, d) # Здесь c - не аргумент с передачей только по ключевым словам!

f(1, 2, 3, x=4)
# 1 (3,) 2 {'x': 4}
print('-' * 80)


def f(a, *b, c=6, **d): print(a, b, c, d)  # Аргумент с передачей только по ключевым словам между * и **

f(1, *(2, 3), **dict(x=4, y=5))     # Распаковка аргументов при вызове
# 1 (2, 3) 6 {'x': 4, 'y': 5}
f(1, *(2, 3), **dict(x=4, y=5), c=7)    # Python 3.13 - ОК. Ключевые аргументы перед формой ** аргументы!
# 1 (2, 3) 7 {'x': 4, 'y': 5}
f(1, *(2, 3), c=7, **dict(x=4, y=5))    # Переопределение стандартного значения
# 1 (2, 3) 7 {'x': 4, 'y': 5}
f(1, c=7, *(2, 3), **dict(x=4, y=5))    # После или перед *
# 1 (2, 3) 7 {'x': 4, 'y': 5}
f(1, *(2, 3), **dict(x=4, y=5, c=7))    # Аргумент с передачей только по ключевым словам в **
# 1 (2, 3) 7 {'x': 4, 'y': 5}
