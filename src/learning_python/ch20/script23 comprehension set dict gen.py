# Осмысление включений множеств и словарей

print({x * x for x in range(10)})       # Включение
# {0, 1, 64, 4, 36, 9, 16, 49, 81, 25}
print(set(x * x for x in range(10)))    # Генератор и имя типа
# {0, 1, 64, 4, 36, 9, 16, 49, 81, 25}

print({x: x * x for x in range(10)})
# {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}
print(dict((x, x * x) for x in range(10)))
# {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}
# print(x)  # Переменная цикла локализуется и в 2.X и в 3.X
# NameError: name 'x' is not defined

print('-' * 80)

res = set()
for x in range(10): # Эквивалентное включение множества
    res.add(x * x)
print(res)
# {0, 1, 64, 4, 36, 9, 16, 49, 81, 25}

res = {}
for x in range(10): # Эквивалентное включение словаря
    res[x] = x * x
print(res)
# {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}
print(x)    # Локализуется в выражениях включений, но не в операторах циклов
# 9

print('-' * 80)
G = ((x, x * x) for x in range(10))
print(next(G))
# (0, 0)
print(next(G))
# (1, 1)
